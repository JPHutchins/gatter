# Pipeline for Gatter repository
#
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pr:
- main
- develop

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'

- script: |
    curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
  displayName: 'Install dependencies'

# Linux & MacOS
- script: |
    echo "##vso[task.prependpath]$HOME/.poetry/bin"
  condition: or( eq( variables['Agent.OS'], 'Linux' ), eq( variables['Agent.OS'], 'Darwin' ) )
  displayName: 'Add poetry to path on Linux/Mac'

# Windows
- pwsh: |
    Write-Host "##vso[task.prependpath]$HOME/.poetry/bin"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Add poetry to path on Windows'

- script : |
    cd backend
    poetry install --no-root
  displayName: 'Install python dependencies'

- script: |
    cd backend
    poetry install
    poetry run black --check .
    poetry run isort --check-only .
  displayName: 'Check formatting'

- script: |
    cd backend
    poetry install
    poetry run flake8 .
    poetry run mypy .
  displayName: 'Check linting'

- script: |
    cd backend
    poetry install
    poetry run coverage erase
    poetry run coverage run -m pytest
    poetry run coverage report
  displayName: 'Tests and coverage'

- script: |
    npm run ebuild --prefix frontend
  displayName: 'Build'

- task: CopyFiles@2
  inputs:
    sourceFolder: 'frontend/dist'
    contents: 'gatter Setup 0.1.0.exe'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
